*{
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #3f3752;
}
.container {
    /* Com position: relative o elemento passa a aceitar os valores top,left,right.
       Position: fixed, muito utilizado em barras de navegador para mante-la no mesmo lugar durante a navegação.
       No caso de position: absolute, ele deixa de fazer parte do fluxo comum do documento
    e o espaço destinado a ele deixa de existir no documento, 
    ou seja ele pode ficar por cima de outros elementos. Usar valores negarivos permite que você posicione
    em lugares que antes não era possível, como um pouco fora da div pai.*/
    position: relative;
    width: 1200px;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    /* A propriedade CSS flex-wrap 
    define se os itens flexíveis são forçados a ficarem na mesma linha 
    ou se podem ser quebradas em varias linhas.*/
    flex-wrap: wrap;
}
.container .servicebox{
    position: relative;
    width: 350px;
    height: 280px;
    background: #51446e;
    border-radius: 20px;
    overflow: hidden;
}
.container .servicebox .icon{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--i);
    transition: 0.5s;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 2;
    transition-delay: 0.25s;
}
.container .servicebox:hover .icon {
    top: 30px;
    left: calc(50% - 40px);
    width: 80px;
    height: 80px;
    border-radius: 50%;
    transition-delay: 0s;
}
.container .servicebox .icon ion-icon {
font-size: 5em;
transition: 0.5s;
}
.container .servicebox:hover .icon ion-icon{
    font-size: 4em;
    color: #fff;
}
.container .servicebox .content {
    position: relative;
    padding: 20px;
    color: #fff;
    text-align: center;
    margin-top: 100px;
    z-index: 1;
    transform: scale(0);
    transition: 0.5s;
    transition-delay: 0s;
}
.container .servicebox:hover .content {
    transform: scale(1);
    transition-delay: 0.25s;
}
.container .servicebox .content h2 {
    margin-top: 10px;
    margin-bottom: 5px;
}
.container .servicebox .content p {
    font-weight: 300;
    line-height: 1.5em;
}
